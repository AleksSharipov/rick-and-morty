{"version":3,"sources":["redux/actions/cards.js","redux/actions/popup.js","components/Card/Card.jsx","components/Category/Category.jsx","components/CardList/CardList.jsx","components/Popup/Popup.jsx","components/App.js","redux/reducers/cards.js","redux/reducers/popup.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["fetchCards","name","status","species","type","gender","dispatch","axios","get","undefined","then","data","setCards","results","items","payload","showPopup","show","Card","useDispatch","useSelector","cards","map","card","className","alt","src","image","href","id","target","rel","onClick","obj","Category","useState","setName","setStatus","setSpecies","setType","setGender","onSubmit","e","preventDefault","onSubmitForm","value","onChange","item","CardList","Popup","popup","App","useEffect","initialState","state","action","rootReducer","combineReducers","cardsReducer","popupReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8deb232b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// export const fetchCards = (name, status, species, type, gender) => (dispatch) => {\r\nexport const fetchCards = (name, status, species, type, gender) => (dispatch) => {\r\n  /**\r\n   * https://rickandmortyapi.com/api/character/?name=rick&status=alive\r\n   */\r\n  axios.get(`https://rickandmortyapi.com/api/character${name === undefined ? '/' : `/?name=${name}`}${status === undefined ? '/' : `&status=${status}`}${species === undefined ? '/' : `&species=${species}`}${type === undefined ? '/' : `&type=${type}`}${gender === undefined ? '/' : `&gender=${gender}`}`)\r\n    .then(({ data }) => {\r\n      // console.log(data)\r\n      dispatch(setCards(data.results))\r\n    })\r\n}\r\n\r\nexport const setCards = (items) => ({\r\n  type: 'SET_CARDS',\r\n  payload: items,\r\n})","export const showPopup = (show) => ({\r\n  type: 'SHOW_POPUP',\r\n  payload: show,\r\n})\r\n\r\nexport const popupContent = (card) => ({\r\n  type: 'POPUP_CONTENT',\r\n  payload: card,\r\n})","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showPopup, popupContent } from '../../redux/actions/popup';\r\n\r\nimport './card.scss';\r\n\r\nexport default function Card() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { items } = useSelector(({ cards }) => {\r\n    return cards;\r\n  })\r\n\r\n  const onCardClick = (obj) => {\r\n    dispatch(showPopup(true))\r\n    dispatch(popupContent(obj))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        items.map((card) => {\r\n          return (\r\n            <div key={card.id} className=\"card\" >\r\n              <img alt={card.name} src={card.image} />\r\n              <div className=\"card__content\">\r\n                <ul>\r\n                  <li>Name: <span\r\n\r\n                  >{card.name}</span></li>\r\n                  <li>Status: <span>{card.status}</span></li>\r\n                  <li>Species: <span>{card.species}</span></li>\r\n                  {\r\n                    card.type ? <li>Type: <span>{card.type}</span></li> : ''\r\n                  }\r\n                  <li>Gender: <span>{card.gender}</span></li>\r\n                </ul>\r\n                <div className=\"card__btn\">\r\n                  <a\r\n                    href={`https://rickandmortyapi.com/api/character/${card.id}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <button>API</button>\r\n                  </a>\r\n                  <button onClick={() => {\r\n                    onCardClick(card)\r\n                  }}>Подробнее</button>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCards } from '../../redux/actions/cards';\r\n\r\nimport './category.scss';\r\n\r\nexport default function Category() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { items } = useSelector(({ cards }) => {\r\n    return cards;\r\n  });\r\n\r\n  const [name, setName] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [species, setSpecies] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [gender, setGender] = useState('');\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(fetchCards(name, status, species, type, gender));\r\n  };\r\n\r\n  const handleClickReset = () => {\r\n    dispatch(fetchCards());\r\n    setName('');\r\n    setStatus('');\r\n    setSpecies('');\r\n    setType('');\r\n    setGender('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"category\">\r\n      <form onSubmit={(e) => {\r\n        onSubmitForm(e)\r\n      }}>\r\n        <label>\r\n          Имя:\r\n          <input value={name} onChange={(e) => { setName(e.target.value) }} type=\"text\" name=\"name\" />\r\n        </label>\r\n        <label>Статус:\r\n          <select value={status} onChange={(e) => setStatus(e.target.value)}>\r\n            <option value=\"alive\">Alive</option>\r\n            <option value=\"dead\">Dead</option>\r\n            <option value=\"unknown\">unknown</option>\r\n          </select>\r\n        </label>\r\n        <label>Вид:\r\n          <select value={species} onChange={(e) => setSpecies(e.target.value)}>\r\n            <option value=\"human\">Human</option>\r\n            <option value=\"alien\">Alien</option>\r\n            <option value=\"humanoid\">Humanoid</option>\r\n          </select>\r\n        </label>\r\n        <label>Тип:\r\n          <select value={type} onChange={(e) => setType(e.target.value)}>\r\n            {\r\n              items.map((item) => {\r\n                return item.type ? <option key={item.id} value={item.type}>{item.type}</option> : ''\r\n              })\r\n            }\r\n          </select>\r\n        </label>\r\n        <label>Пол:\r\n          <select value={gender} onChange={(e) => setGender(e.target.value)}>\r\n            <option value=\"Male\">Male</option>\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"unknown\">unknown</option>\r\n          </select>\r\n        </label>\r\n\r\n        <div>\r\n          <button>Сортировать</button>\r\n          <button onClick={handleClickReset}>Reset</button>\r\n        </div>\r\n      </form>\r\n    </div >\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport Category from '../Category/Category';\r\n\r\nimport './cardList.scss';\r\n\r\nexport default function CardList() {\r\n  // const species = [\r\n  //   { type: 'human' },\r\n  //   { type: 'alien' },\r\n  // ];\r\n\r\n  return (\r\n    <div>\r\n      <Category />\r\n      <div className=\"cards\">\r\n        <Card />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showPopup } from '../../redux/actions/popup';\r\n\r\nimport './popup.scss';\r\n\r\nexport default function Popup() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { obj } = useSelector(({ popup }) => {\r\n    return popup;\r\n  })\r\n\r\n  const onClosePopup = () => {\r\n    dispatch(showPopup(false))\r\n  }\r\n\r\n  return (\r\n    <section className=\"popup popup_opened\">\r\n      <div className=\"popup__content\">\r\n        <img alt={obj.name} src={obj.image} />\r\n        <ul>\r\n          <li>Name: <span>{obj.name}</span></li>\r\n          <li>Status: <span>{obj.status}</span></li>\r\n          <li>Species: <span>{obj.species}</span></li>\r\n          {\r\n            obj.type ? <li>Type: <span>{obj.type}</span></li> : ''\r\n          }\r\n          <li>Gender: <span>{obj.gender}</span></li>\r\n        </ul>\r\n        <button className=\"popup__close\" onClick={() => { onClosePopup() }}>Close</button>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchCards } from '../redux/actions/cards';\n\nimport './app.scss';\nimport CardList from './CardList/CardList';\nimport Popup from './Popup/Popup';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCards())\n  }, [])\n\n  const { show } = useSelector(({ popup }) => {\n    return popup;\n  })\n\n  return (\n    <div className=\"app\">\n      <CardList />\n      {\n        show ? <Popup /> : ''\n      }\n      {/* <Popup open={showPopup} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  items: [],\r\n};\r\n\r\nconst cards = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CARDS':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cards;","const initialState = {\r\n  show: false,\r\n  obj: {}\r\n};\r\n\r\nconst popup = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SHOW_POPUP':\r\n      return {\r\n        ...state,\r\n        show: action.payload,\r\n      }\r\n\r\n    case 'POPUP_CONTENT':\r\n      return {\r\n        ...state,\r\n        obj: action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default popup;","import { combineReducers } from 'redux';\r\n\r\nimport cardsReducer from './cards';\r\nimport popupReducer from './popup';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  cards: cardsReducer,\r\n  popup: popupReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}